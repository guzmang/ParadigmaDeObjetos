Object subclass: #Traje	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Traje commentStamp: '<historical>' prior: 0!A Traje is xxxxxxxxx.Instance Variables!!Traje methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/24/2013 23:40'!resistencia:ptosDeAtaque^(0.1*ptosDeAtaque).! !!Traje methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/4/2013 07:17'!resistir:ptosDeAtaque en:unGuerrero^ptosDeAtaque - (self resistencia: ptosDeAtaque).! !Traje subclass: #TrajeDeEntranamiento	instanceVariableNames: 'portador ataquesResistidos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!TrajeDeEntranamiento commentStamp: '<historical>' prior: 0!A TrajeDeEntranamiento is xxxxxxxxx.Instance Variables!!TrajeDeEntranamiento methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/29/2013 19:45'!ataquesResistidos"Cada tres ataque se reinicia"ataquesResistidos:=ataquesResistidos+1.(ataquesResistidos>3)ifTrue:[^(ataquesResistidos:=0)].^ataquesResistidos.! !!TrajeDeEntranamiento methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/3/2013 21:27'!entrenarPortador:unPortadorunPortador incrementarNivelDePelea: 100.! !!TrajeDeEntranamiento methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/3/2013 22:59'!initializeataquesResistidos:=0.! !!TrajeDeEntranamiento methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 14:31'!resistir:ptosDeAtaque en:unPortador"Cada tres ataques que reciste el traje, tiene que entrenar a su portador"unPortador usarEnergia: 20.((self ataquesResistidos) =3)ifTrue:[self entrenarPortador:unPortador].^super resistir: ptosDeAtaque en:unPortador.! !Object subclass: #Dragon	instanceVariableNames: 'esferas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:13'!esferas^esferas! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:24'!incrementarPoderDe:unGuerrerounGuerrero nivelDePelea: (unGuerrero nivelDePelea * 1.5).(unGuerrero aliados) do:[:unAliado | unAliado nivelDePelea: (unAliado nivelDePelea  * 1.1)].! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:50'!initialize esferas:=Set new.! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:23'!otorgarDeseo:unGuerrero(unGuerrero bando = Bueno bueno)ifTrue:[self revivirAmigoDe: unGuerrero]ifFalse:[self incrementarPoderDe: unGuerrero]! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:22'!revivir:unAliadounAliado puntosDeVida:1000.unAliado energia:200.! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:22'!revivirAmigoDe: unGuerreroself revivir:(unGuerrero aliadosMuertos detectMax:[:unAliado | unAliado nivelDePelea ]).! !!Dragon methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 03:22'!sonLasEsferasPosta:unGuerrero^(esferas allSatisfy:[:unaEsfera | ((unGuerrero esferas) includes:unaEsfera) | (unGuerrero loTieneUnAliado:unaEsfera) ]).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Dragon class	instanceVariableNames: 'esferas'!Object subclass: #PoderLiviano	instanceVariableNames: 'puntosDeAtaque energiaRequeridaAtacante'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!PoderLiviano commentStamp: '<historical>' prior: 0!Son poderes que no sacan energía al guerrero atacante, pero no pueden hacerse si un guerrero tiene menos de 50 puntos de energía. Cada poder liviano produce siempre la misma cantidad de puntos de ataque, que puede variar entre los diferentes poderes livianos.!!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:46'!consumirEnergiaAtacante: unAtacante^(unAtacante usarEnergia: (self energiaRequeridaAtacante)).! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:47'!cumpleCondicionEnergiaRequerida:elAtacante^((elAtacante puntosDeEnergia) >= self energiaRequeridaAtacante ).! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:55'!cumpleCondiciones:unGuerrero^self cumpleCondicionEnergiaRequerida: unGuerrero .! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:43'!energiaRequerida:unGuerrero^(self energiaRequeridaAtacante).! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:49'!energiaRequeridaAtacante^energiaRequeridaAtacante.! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:07'!initializeenergiaRequeridaAtacante :=50.! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 21:49'!intenciadadDeAtaqueSegun:unGuerrero^self puntosDeAtaque.! !!PoderLiviano methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:53'!verificarEnergiaRequeridaDe:elAtacante(self cumpleCondicionEnergiaRequerida:elAtacante)ifFalse: [ self error:'El atacante no tiene Energia' ]! !!PoderLiviano methodsFor: 'accessing' stamp: 'PabloOntiveros 10/20/2013 12:11'!puntosDeAtaque^puntosDeAtaque.! !!PoderLiviano methodsFor: 'accessing' stamp: 'PabloOntiveros 10/20/2013 12:11'!puntosDeAtaque:unaCant^puntosDeAtaque:=unaCant.! !!PoderLiviano methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 12/16/2013 18:52'!energiaRequeridaAtacante:unaCant^energiaRequeridaAtacante:=unaCant.! !!PoderLiviano methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 12/11/2013 12:37'!usaPoder:unGuerrero contra:otroGuerreroself verificarEnergiaRequeridaDe: unGuerrero.otroGuerrero recibirAtaque: (self puntosDeAtaque).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PoderLiviano class	instanceVariableNames: ''!!PoderLiviano class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/23/2013 00:20'!puntosDeAtaque:unaCant|poderLiviano|poderLiviano:=self new.poderLiviano puntosDeAtaque: unaCant.^poderLiviano.! !Object subclass: #Malo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Malo commentStamp: '<historical>' prior: 0!A Malo is xxxxxxxxx.Instance Variables!!Malo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:49'!comparteSemilla: unGuerreroMalo a:otroGuerrero(unGuerreroMalo esAliado: otroGuerrero) & (unGuerreroMalo semillas >1)ifTrue:[otroGuerrero semillas:(otroGuerrero semillas+1). unGuerreroMalo semillas:(unGuerreroMalo semillas-1). ^true]ifFalse:[^false].! !!Malo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 03:21'!daQuePidaUnDeseo:unGuerrero"A los Malos siempre les da pedir un deseo"^true.! !!Malo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 18:10'!deseo:unGuerrerounGuerrero nivelDePelea: (unGuerrero nivelDePelea * 1.5).(unGuerrero aliados) do:[:unAliado | unAliado nivelDePelea: (unAliado nivelDePelea  * 1.1)].! !!Malo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 18:23'!esCompatibleCon:otroBando ^self=otroBando.! !!Malo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:53'!recibirDe:unGuerreroMalo para:otroGuerrero"El guerrero malo le sa si tiene al menos una para el""Si tiene semillas, usarSemilla retorna la semilla""Si no tiene, sale por excepción y otroGuerrero no recibe nada"(self comparteSemilla:unGuerreroMalo a:otroGuerrero)ifFalse:[self error: 'No te puedo dar semillas'].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Malo class	instanceVariableNames: 'malo'!!Malo class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:04'!initialize malo:= Malo new ! !!Malo class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:04'!malo^malo! !Object subclass: #PoderPotente	instanceVariableNames: 'potenciaDelAtaque energiaRequeridaAtacante'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!PoderPotente commentStamp: '<historical>' prior: 0!Le sacan al guerrero atacante el 25% de su energía, y sus puntos de ataque respetan la siguiente fórmula: (nivel de pelea del guerrero / 500 * potencia del ataque). La potencia del ataque es una característica configurable de cada poder potente.!!PoderPotente methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:48'!cumpleCondicionEnergiaRequerida:elAtacante^((elAtacante puntosDeEnergia) >= self energiaRequeridaAtacante ).! !!PoderPotente methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 22:54'!cumpleCondiciones:unGuerrero^(unGuerrero puntosDeEnergia >0).! !!PoderPotente methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/25/2013 01:37'!energiaRequerida:unGuerrero^(unGuerrero puntosDeEnergia*0.25).! !!PoderPotente methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:50'!energiaRequeridaAtacante^energiaRequeridaAtacante.! !!PoderPotente methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:52'!energiaRequeridaAtacante:unaCant^energiaRequeridaAtacante:=unaCant.! !!PoderPotente methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:53'!verificarEnergiaRequeridaDe:elAtacante(self cumpleCondicionEnergiaRequerida:elAtacante)ifFalse: [ self error:'El atacante no tiene Energia' ]! !!PoderPotente methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 12/8/2013 21:43'!consumirEnergiaAtacante: unGuerrero^(unGuerrero usarEnergia: (unGuerrero puntosDeEnergia*0.25)).! !!PoderPotente methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 10/20/2013 12:50'!intenciadadDeAtaqueSegun:unGuerrero^(unGuerrero nivelDePelea / 500 * (self potenciaDelAtaque )).! !!PoderPotente methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 12/8/2013 21:43'!usaPoder:unGuerrero contra:otroGuerreroself consumirEnergiaAtacante: unGuerrero.otroGuerrero recibirAtaque: (self intenciadadDeAtaqueSegun:unGuerrero)! !!PoderPotente methodsFor: 'accessing' stamp: 'PabloOntiveros 10/20/2013 12:48'!potenciaDelAtaque^potenciaDelAtaque.! !!PoderPotente methodsFor: 'accessing' stamp: 'PabloOntiveros 10/20/2013 12:48'!potenciaDelAtaque:unaCant^potenciaDelAtaque:=unaCant.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PoderPotente class	instanceVariableNames: ''!!PoderPotente class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/23/2013 00:20'!potencia:unaCant|poder|poder:=self new.poder potenciaDelAtaque: unaCant.^poder.! !Object subclass: #Bueno	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Bueno commentStamp: '<historical>' prior: 0!A Bueno is xxxxxxxxx.Instance Variables!!Bueno methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:48'!comparteSemilla:unGuerreroBueno a:otroGuerrero(unGuerreroBueno esAliado: otroGuerrero) & (unGuerreroBueno tieneSemillas )ifTrue:[otroGuerrero semillas:(otroGuerrero semillas+1). unGuerreroBueno semillas:(unGuerreroBueno semillas-1). ^true]ifFalse:[^false].! !!Bueno methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 04:39'!daQuePidaUnDeseo:unGuerrero"A los Buenos solo les da pedir un deseo si tienen algun aliado muerto"^unGuerrero hayAliadosMuertos.! !!Bueno methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/7/2013 10:23'!deseo:unGuerreroself revivir:(unGuerrero aliadosMuertos detectMax:[:unAliado | unAliado nivelDePelea ]).! !!Bueno methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 18:12'!esCompatibleCon:otroBando ^self=otroBando.! !!Bueno methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:53'!recibirDe:unGuerrero para:otroGuerrero"El guerrero bueno siempre le da una semilla a su aliado""Si tiene semillas, usarSemilla retorna la semilla"( self comparteSemilla:unGuerrero a:otroGuerrero)ifFalse:[self error: 'No le puedo dar semillas...'].! !!Bueno methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 18:08'!revivir:unAliadounAliado puntosDeVida:1000.unAliado energia:200.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Bueno class	instanceVariableNames: 'bueno'!!Bueno class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:07'!bueno^bueno ! !!Bueno class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:06'!initialize bueno:= Bueno new! !Object subclass: #SinTraje	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!SinTraje commentStamp: '<historical>' prior: 0!A SinTraje is xxxxxxxxx.Instance Variables!!SinTraje methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/24/2013 23:40'!resistencia:ptosAtaque^0.! !!SinTraje methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/17/2013 00:07'!resistir:ptosDeAtaque en:unGuerrero^ptosDeAtaque - ((unGuerrero traje) resistencia: ptosDeAtaque).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SinTraje class	instanceVariableNames: 'sinTraje'!!SinTraje class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 23:37'!initialize sinTraje:=SinTraje new.! !!SinTraje class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 23:37'!sinTraje^sinTraje! !Object subclass: #PoderVengativo	instanceVariableNames: 'basjasReq energiaRequeridaAtacante'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!PoderVengativo commentStamp: '<historical>' prior: 0!A PoderVengativo is xxxxxxxxx.Instance Variables	puntosDeAtaque:		<Object>puntosDeAtaque	- xxxxx!!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 01:35'!bajasReq^basjasReq.! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 01:35'!bajasReq:cant^basjasReq:=cant.! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:46'!consumirEnergiaAtacante: unAtacante^(unAtacante usarEnergia: (self energiaRequeridaAtacante)).! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 05:01'!cumpleCondicionAliadosMuertos:unGuerrero^((unGuerrero aliadosMuertos size)>= (self bajasReq )).! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!cumpleCondicionAliadosVivosDe:elAtacante^((elAtacante aliadosVivos) size >0)! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:48'!cumpleCondicionEnergiaRequerida:elAtacante^((elAtacante puntosDeEnergia) >= self energiaRequeridaAtacante ).! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 00:21'!cumpleCondiciones:unGuerrero^(self cumpleCondicionAliadosMuertos:unGuerrero)&(self cumpleCondicionAliadosVivosDe:unGuerrero)&(self cumpleCondicionEnergiaRequerida:unGuerrero).! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:43'!energiaRequerida:unGuerrero^(self energiaRequeridaAtacante).! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:50'!energiaRequeridaAtacante^energiaRequeridaAtacante.! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:52'!energiaRequeridaAtacante:unaCant^energiaRequeridaAtacante:=unaCant.! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 05:03'!verificarAliadosMuertosDe:elAtacante(self cumpleCondicionAliadosMuertos:elAtacante)ifFalse: [ self error:'El atacante no tiene bajas que vengar' ]! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 00:14'!verificarAliadosVivosDe:elAtacante(self cumpleCondicionAliadosVivosDe:elAtacante)ifFalse: [ self error:'El atacante no tiene alidos por los que luchar' ]! !!PoderVengativo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:53'!verificarEnergiaRequeridaDe:elAtacante(self cumpleCondicionEnergiaRequerida:elAtacante)ifFalse: [ self error:'El atacante no tiene Energia' ]! !!PoderVengativo methodsFor: 'Poderes y Niveles de Ataque' stamp: 'PabloMOntiveros 10/22/2013 02:04'!consumirVidaDe: unGuerrero^(unGuerrero consumirVida:  (0.2*(self intenciadadDeAtaqueSegun:unGuerrero))).! !!PoderVengativo methodsFor: 'Poderes y Niveles de Ataque' stamp: 'PabloOntiveros 10/20/2013 18:42'!intenciadadDeAtaqueSegun:unGuerrero^(250 * (unGuerrero cantAliadosMuertos )).! !!PoderVengativo methodsFor: 'Poderes y Niveles de Ataque' stamp: 'PabloOntiveros 12/8/2013 21:43'!usaPoder:unGuerrero contra:otroGuerreroself verificarAliadosMuertosDe:unGuerrero.self verificarAliadosVivosDe: unGuerrero.self verificarEnergiaRequeridaDe: unGuerrero.self consumirEnergiaAtacante: unGuerrero.self consumirVidaDe: unGuerrero.otroGuerrero recibirAtaque: (self intenciadadDeAtaqueSegun:unGuerrero).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PoderVengativo class	instanceVariableNames: ''!!PoderVengativo class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:51'!puntosDeEnergia:cant bajasReq:otraCant|poderVengativo|poderVengativo :=self new. poderVengativo energiaRequeridaAtacante: cant. poderVengativo bajasReq: otraCant.^poderVengativo.! !Object subclass: #Guerrero	instanceVariableNames: 'nivelDePelea energia puntosDeVida semillas aliados traje poderes puntosDeEnergiaExtra bando guerrerosAtacados esferas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Guerrero commentStamp: '<historical>' prior: 0!Los guerreros serán los involucrados en las peleas, en las que participarán haciendo diferentes ataques a un adversario (ver luego en sección de Ataques). Todos los guerreros cuentan con un nivel de pelea que se corresponde a cuán fuertes son (por ejemplo, Goku tiene un nivel de pelea de 100.000, y es más fuerte que Krilin que tiene un nivel de pelea de 28.000).Los guerreros también cuentan con una cantidad de energía y de puntos de vida. Cada guerrero nace con esos 1000 puntos de vida, que es el máximo de puntos de vida que puede tener en cualquier momento; y 200 puntos de energía, la energía de un guerrero puede variar sin topes.Si un guerrero tiene 50 puntos de vida o menos se lo considera moribundo, y si llega a 0 puntos ese guerrero murió y queda fuera de combate. Se puede revivir a un guerrero, para eso habrá que juntar las 7 Esferas del Dragón y pedirle el deseo a Shen Long (ver sección de Esferas del Dragón).La energía es lo que les servirá para atacar a otros guerreros y se irá consumiendo cuando el guerrero hace ataques.aliados	- xxxxxenergia	- xxxxxnivelDePelea	- xxxxxpoderes	- xxxxxpuntosDeVida	- xxxxxsemillasDelErmitanio	- xxxxxtrajes	- xxxxx!!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 12/17/2013 01:55'!aQuienLeCedo^self guerrerosParaRepartija first.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 14:52'!agregarAliado:unGuerreroself aliados add:unGuerrero.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!aliadosMuertos^self aliados select:[:unAliado | unAliado estaMuerto].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!aliadosVivos"Retorna una lista con aliados Vivos"^self aliados select:[:unAliado | unAliado estaVivo ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 14:52'!aliarse: unGuerrerounGuerrero agregarAliado: self.self agregarAliado: unGuerrero.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/18/2013 20:06'!aliarseCon:unGuerrero"1.b Aliar a un guerrero con otro, si se puede llevar a cabo la alianza. Si no sepuede, que falle con una excepción. "(self verificarAlianzaCon: unGuerrero)ifFalse:[self error:'La Alianza no camina....']ifTrue:[self aliarse: unGuerrero].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:15'!ameritaUsarSem"Es para saber si amertia comer una semilla"^(energia <200) & (self estaMuerto not).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/21/2013 13:31'!aprenderPoder:unPoder"Aprende un determinado poder""La idea es que si no lo tiene aprendido no lo puede usar."^poderes add:unPoder.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 04:10'!ataca:unGuerrero con:unPoderunPoder usaPoder: self contra:unGuerrero.guerrerosAtacados add:unGuerrero.(unGuerrero estaMoribundo)ifTrue: [self sacarEsferaA:unGuerrero.(unPoder class = PoderVengativo) & (self estaVivo not) & (self esferas notNil)ifTrue: [self cederPorMorir].]! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 14:53'!atacaA:unGuerrero con:unPoder"Si desconoce el poder falla"(self puedeRealizar: unPoder) & (self estaVivo)ifTrue:[self ataca:unGuerrero con:unPoder]ifFalse:[self error: 'No se puede atacar'].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 14:19'!atacarConTodoA:unGuerrero^self atacaA: unGuerrero  con: (self ataqueMasPoderosoDisponible).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 23:27'!atacarConUnPoderCualquieraA:unGuerrero^self atacaA: unGuerrero  con: (self unPoderCualquiera).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 21:54'!ataqueMasPoderosoDisponible^((self poderesDisponibles) detectMax:[:unPoder | unPoder intenciadadDeAtaqueSegun: self ]).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!cantAliadosMuertos"Devuelve cunatos aliados caidos tiene el guerrero"^self aliadosMuertos size.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!cantAliadosVivos"Devuelve cunatos aliados caidos tiene el guerrero"^self aliadosVivos size.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/21/2013 13:36'!cantExtra"Devuelve la cantidade de energia extra que aporta la semilla al guerrero""Este metodo solo es distinto para los Saiyajines"^puntosDeEnergiaExtra.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 23:55'!causarAlMenos:ptosDanio a:unGuerrero^self atacaA: unGuerrero con: (self unPoderQueCause:ptosDanio ) .! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 05:41'!cederPorMorir(self esferas) do: [ :unaEsfera | ((self aliados detect: [:unAliado | unAliado estaMoribundo not]) esferas) add:unaEsfera ].(self esferas) removeAll.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 21:03'!comerSemillaself ameritaUsarSemifTrue:[self usarSemilla. self recuperarVida.]ifFalse:[self error: 'No Amerita usar una semilla...']! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 21:37'!comparteSemillaA:unGuerrero(self bando) comparteSemilla: self a: unGuerrero.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 02:26'!condicionBasicaParaAlianza:unGuerrero^ (((self esAliado: unGuerrero )not) & (unGuerrero ~~ self)) .! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 21:38'!consigueSemillas^self aliados anySatisfy: [ :unAliado | unAliado comparteSemillaA: self ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 01:08'!consumirEnergia:unaCant"Consume toda la energia. Si quiero verificar antes de consumir, ver metodo usarEnergia"(self puntosDeEnergia <= unaCant )ifTrue: [self puntosDeEnergia: 0.  ]ifFalse:[self puntosDeEnergia: (energia - unaCant) ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/25/2013 00:07'!consumirVida:unaCant"Consume toda la vida. Si quiero verificar antes de consumir, ver metodo verificarVida "(self puntosDeVida <= unaCant )ifTrue: [self puntosDeVida: 0.  ]ifFalse:[self puntosDeVida: puntosDeVida - unaCant ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 13:41'!darEsfera(self tenemosTodasLasEsferas )ifTrue: [^(self todasLasEsferas) remove:(esferas anyOne)]ifFalse:[^nil].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 13:48'!darEsfera:unGuerrero((esferas size) >0)ifTrue: [^(unGuerrero esferas) add:(((self esferas) remove:(esferas anyOne)))]ifFalse:[^nil].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 21:08'!darSemilla:unGuerrero^bando recibirDe: self  para: unGuerrero.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:32'!enemigosVivos"Retorna una lista con aliados Vivos"^guerrerosAtacados select:[:g | g estaVivo ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 10:38'!esAliado:unGuerrero^(self aliados) includes: unGuerrero.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 01:38'!esferas^esferas.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 10:10'!estaMoribundo^puntosDeVida<=50.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 10:11'!estaMuerto^puntosDeVida=0.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/8/2013 00:00'!estaVivo	"Retorna True si el Guerrero esta vivo"	^self puntosDeVida>0.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:32'!guerrerosParaRepartija^((self aliadosVivos union: (self enemigosVivos )) asSortedCollection: [:a :b | (self esAliado: a) ]).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 06:00'!guerrerosParaRepartija2^((self aliados) detect:[:unAliado | unAliado estaMoribundo not]).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!hayAliadosMuertos^((self aliadosMuertos)size >0).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 19:15'!impactoAtaque:ptosDeAtaque"b. Saber para un guerrero cuántos puntos de vida le quitaría un ataque de npuntos de ataque que representan la intensidad del ataque que recibiría"^ptosDeAtaque - (self resistencia: ptosDeAtaque).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/24/2013 23:50'!incrementarNivelDePelea:cant^nivelDePelea:=nivelDePelea +cant .! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 03:38'!invocarDragon:dragon(self puedoInvocarDragon) & (dragon sonLasEsferasPosta:self)ifTrue:[self reunirEsferas. dragon otorgarDeseo:self. self repartirEsferas]ifFalse:[self error: 'No estamos en condiciones de llamar al Dragon.'].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:34'!leDasUnaSemilla(self bando=Bueno bueno)ifTrue:[^(self semillas > 0)]ifFalse:[^(self semillas > 1)].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 03:25'!loTieneUnAliado:unaEsfera^(self aliados) anySatisfy: [:unAliado | (unAliado esferas) includes: unaEsfera]! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 17:46'!pedirDeseobando deseo:self.self repartirEsferas.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 13:53'!pedirEsferasself aliados do:[:unAliado | unAliado darEsfera: self ]! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:28'!pedirSemillaA:unGuerrero^unGuerrero darSemilla: self.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 02:42'!poderTotalAliados^self aliados inject: 0 into:  [ :acum :unAliado|unAliado nivelDePelea ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 22:21'!poderes^poderes ! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 01:38'!poderesDisponibles^(poderes select: [:unPoder | self puedeRealizar: unPoder ]).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 12:59'!poderesDisponiblesConAliados^(self poderesDisponibles , ((self aliadosVivos ) gather:[:unAliado | unAliado poderesDisponibles ]))."^(self aliadosVivos) inject: (self poderesDisponibles ) into: [ :acum :unAliado |  (acum add: (unAliado poderesDisponibles))  ]."! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 00:24'!puedeRealizar:unPoder^(self tieneAprendio:unPoder)& (unPoder cumpleCondiciones: self).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 03:23'!puedoInvocarDragon^(self tenemosTodasLasEsferas) & (self estaMoribundo not) & (self tieneSentidoInvocarDragon).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 23:56'!recibirAtaque:puntosDeAtaqueself consumirVida: (self resistir: ((self traje) resistir: puntosDeAtaque en:self) ).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/23/2013 01:57'!recuperarVidaself puntosDeVida: 1000.self energia: (energia+(0.05*nivelDePelea) +self cantExtra).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:32'!repartirEsferas^self repartirEsferas: (self guerrerosParaRepartija ).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 13:49'!repartirEsferas:unaListaunaLista do:[:unGuerrero | self darEsfera:unGuerrero ].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 19:04'!resistencia:ptosDeAtaque"Resistencia total: Guerrero mas traje"^(self resistenciaGuerrero: ptosDeAtaque)+((self traje) resistencia: ptosDeAtaque )! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/4/2013 07:14'!resistenciaGuerrero:ptosDeAtaque"Cuanto resiste el gerrero considerando lo que deja pasar el traje."^(self resistenciaSegunGuerrero: (ptosDeAtaque-((self traje) resistencia: ptosDeAtaque))).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 10:52'!resistir:unAtaque^unAtaque - (self resistenciaSegunGuerrero: unAtaque).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 12/17/2013 01:53'!reunirEsferas(self aliados) do:[:unAliado | ((unAliado esferas) size) timesRepeat: [unAliado darEsfera: self ]].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 01:49'!sacarEsferaA:unGuerreroself esferas union:((unGuerrero esferas) removeAll)! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 05:11'!tenemosTodasLasEsferas^(( (self todasLasEsferas) allSatisfy: [:unaEsfera | Esfera esPosta: unaEsfera  ]) &((self todasLasEsferas) size)  =7).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 14:57'!tieneAprendio:unPoder^poderes includes: unPoder.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:34'!tieneSemillas^semillas >0.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 03:23'!tieneSentidoInvocarDragon^((self bando) daQuePidaUnDeseo:self).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 02:57'!todasLasEsferas^(self esferas, ((self aliados) gather: [:unAliado | unAliado esferas ] ))! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 23:25'!unPoderCualquiera^((self poderesDisponibles) anyOne).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 00:04'!unPoderQueCause:unDanio"Alguno (cualquiera) que produzca al menos unDanio"^(self poderesDisponibles) detect: [ :unPoder | (unPoder intenciadadDeAtaqueSegun: self) >= unDanio  ]ifNone:[self ataqueMasPoderosoDisponible].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 23:08'!usarAtaqueMasPoderoso:unGuerrero^self atacaA:unGuerrero con:(self ataqueMasPoderosoDisponible).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 14:58'!usarEnergia:unaCant(self puntosDeEnergia >= unaCant)ifTrue:[self consumirEnergia:unaCant.]ifFalse:[self error: self name , 'No puedo usar la energia solicitada'.].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 00:33'!usarSemilla| aliadosAManguear alguien |(self tieneSemillas)ifTrue: [ semillas:=semillas -1. ^1]ifFalse:[aliadosAManguear := self aliadosVivos.alguien:=aliadosAManguear detect: [:alguno | alguno leDasUnaSemilla]ifNone:[ self error: 'No tengo semillas ni pude conseguir..' ].self pedirSemillaA: alguien.semillas:=semillas -1.^1.]! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/3/2013 22:36'!usarTraje:unTrajeself traje:unTraje.! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 04:52'!verificarAlianzaCon: unGuerrero"Se hace aliado de un Guerrero si a AMBOS les va la alianza y ya no son aliados""de lo contrario hay excepción"^(self teVaUnaAlianzaCon:unGuerrero) & (unGuerrero teVaUnaAlianzaCon: self).! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/25/2013 00:00'!verificarEnergia:unaCant(self puntosDeEnergia >= unaCant)ifFalse:[self error: self name , 'No puedo usar la energia solicitada'.].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/30/2013 01:06'!verificarPoderAprendido:unPoder(self tieneAprendio: unPoder)ifFalse:[self error:'No tengo aprendido ese poder'].! !!Guerrero methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/23/2013 22:31'!verificarVida:unGuerrerounGuerrero estaVivoifFalse: [ self error: 'El Guerrero esta Muerto' ]! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/21/2013 13:26'!aliados"Devuelve lista con los Todos aliados"^aliados.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/21/2013 13:33'!bando"Devuelve el Bando al que pertenece el guerrero"^bando.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/21/2013 13:33'!bando:unBando"Setter del Bando al que pertenece el Guerrero."^bando:=unBando.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/19/2013 10:17'!energia:unaCant^energia:=unaCant.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/17/2013 22:59'!nivelDePelea	^nivelDePelea.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/17/2013 22:59'!nivelDePelea:unNivel	^nivelDePelea:=unNivel.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 12/6/2013 21:42'!puedeUsarSem"Un guerrero puede usar semillas si solo si amerita su uso (poca energia o  no esta muerto),ademas tiene que tener o poder conseguir"^(self ameritaUsarSem) & ((self tieneSemillas ) |(self consigueSemillas)).! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/23/2013 07:33'!puntosDeEnergia^energia.! !!Guerrero methodsFor: 'accessing' stamp: 'Ontiveros 10/28/2013 23:17'!puntosDeEnergia:cant^energia:=cant.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/19/2013 10:23'!puntosDeEnergiaExtra^puntosDeEnergiaExtra.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/23/2013 07:31'!puntosDeVida	^puntosDeVida. ! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/7/2013 23:59'!puntosDeVida:unosPuntosDeVida	^puntosDeVida:=unosPuntosDeVida.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 12/6/2013 20:31'!repartirRestantes:listaEsferas|unEnemigo listaEnemigos atacados| "Revisar objeto atacados de donde sale"listaEnemigos:= OrderedCollection new.unEnemigo:= atacados detect:[:unEnem | unEnem estaMuerto not].listaEnemigos:= unEnemigo aliadosVivos.(listaEsferas size) < (listaEnemigos size)ifTrue:[1 to:(listaEsferas size) do:[:indice | ((listaEnemigos at:indice) esferas) add:(listaEsferas at:indice)]]ifFalse:[(self esferas) addAll: listaEsferas.].! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/19/2013 19:09'!semillas^semillas.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloOntiveros 10/19/2013 19:10'!semillas:cantSemillas^semillas:=cantSemillas.! !!Guerrero methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/27/2013 23:25'!traje^traje.! !!Guerrero methodsFor: 'accessing' stamp: 'EntrenandoATuDragona 12/17/2013 00:49'!traje:unTrajetraje:=unTraje.! !!Guerrero methodsFor: 'initialize-release' stamp: 'EntrenandoATuDragona 12/19/2013 02:22'!initializealiados:= Set new. guerrerosAtacados:= Set new. poderes:=Set new.esferas:=Set new.puntosDeVida :=1000.energia :=200.traje:=(SinTraje sinTraje).semillas:=0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Guerrero class	instanceVariableNames: ''!!Guerrero class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 21:17'!bueno^bueno.! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 23:35'!initialize! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 21:17'!malo^malo.! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 02:22'!nivelDePelea:unNivel|unGuerrero|unGuerrero:=self new.unGuerrero nivelDePelea: unNivel.^unGuerrero.! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 16:05'!nivelDePelea:unNivel energia:unaEnergia puntosDeVida:puntosVida |unGuerrero|unGuerrero:=self new.unGuerrero nivelDePelea: unNivel.unGuerrero energia: unaEnergia .unGuerrero puntosDeVida: puntosVida .^unGuerrero.! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 01:20'!nivelDePelea:unNivel traje:unTraje|unGuerrero|unGuerrero:=self nivelDePelea: unNivel.unGuerrero traje: unTraje.^unGuerrero.! !!Guerrero class methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 22:06'!sinTraje^sinTraje.! !Guerrero subclass: #Monstruo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Monstruo commentStamp: '<historical>' prior: 0!Monstruos: Todos los monstruos son malos, pueden aliarse con guerreros de cualquiera de los 2 bandos, sin condiciones. Cuando comen una Semilla de Ermitaño no ganan puntos extras.Al ser atacados resisten 20 puntos fijos independientemente de los puntos de ataque recibidos, que son los que deja pasar el traje que tengan en ese momento.!!Monstruo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:02'!initializesuper initialize.puntosDeEnergiaExtra:=0.bando:= Malo malo.! !!Monstruo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 12:43'!resistenciaSegunGuerrero:ptosDeAtaque"Devuelve cuanto resisten el guerrero"^ptosDeAtaque min:20.! !!Monstruo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/19/2013 04:57'!teVaUnaAlianzaCon:unGuerrero^self condicionBasicaParaAlianza:unGuerrero.! !Object subclass: #Esfera	instanceVariableNames: 'cantEstrellas poseedor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Esfera commentStamp: '<historical>' prior: 0!Esferas del DragónLas esferas del dragón son 7, y cada esfera tiene una cantidad de estrellas de 1 a 7 (entonces está la esfera de 1 estrella, la de 2 estrellas, etc.).El sistema no deberá permitir la creación de esferas “truchas” que tengan otra cantidad de estrellas, ni lamodificación de esta cantidad una vez creadas. Estas operaciones deben fallar.Para simplificar el modelo, no se necesitan validaciones respecto a esferas duplicadas y se asume que no se encontrarán en el mundo dos esferas válidas de la misma cantidad de estrellas (por ejemplo, se asume que no ocurriría la situación donde dos guerreros tienen cada uno una esfera de 2 estrellas, cuando debería existir una sola).!!Esfera methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 18:29'!cantEstrellas^cantEstrellas.! !!Esfera methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 01:24'!initializecantEstrellas:=Esfera asignarNroEstrella.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Esfera class	instanceVariableNames: 'esferas flag nroEstrella'!!Esfera class methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/31/2013 01:24'!asignarNroEstrella^nroEstrella.! !!Esfera class methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/31/2013 01:23'!incrementarNroEstrellanroEstrella :=nroEstrella +1.! !!Esfera class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 04:59'!esPosta:unaEsfera((unaEsfera class) ==self )ifTrue: [^((esferas at:(unaEsfera cantEstrellas))==unaEsfera).]ifFalse:[^false].! !!Esfera class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/17/2013 15:32'!esferas^esferas! !!Esfera class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/31/2013 03:09'!nro:nroEstralla^esferas at:nroEstralla. ! !!Esfera class methodsFor: 'class initialization' stamp: 'PabloMOntiveros 10/31/2013 02:12'!initializeflag:=true.nroEstrella :=0.esferas:=Array new:7.1 to: 7 do: [:indice | self incrementarNroEstrella. esferas at:indice put: (self new). ].flag:=false.! !!Esfera class methodsFor: 'instance creation' stamp: 'PabloMOntiveros 10/31/2013 01:11'!newflagifTrue:[^self basicNew initialize. ]ifFalse: [self error:'Ya hay 7 esferas en este universo' ].! !Guerrero subclass: #Terricola	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Terricola commentStamp: '<historical>' prior: 0!Terrícolas: Sólo pueden hacer ataques que les consuman menos de 500 puntos de energía. Cuando comen una Semilla de  ermitaño ganan 200 puntos de energía extra. Todos los guerreros terrícolas son buenos y sólo pueden aliarse con buenos. Un guerrero terrícola se puede aliar hasta con 5 guerreros con nivel de pelea menor a 15.000, más todos los que quiera de nivel de pelea de 15.000 o más. Al ser atacados resisten el 5% de los puntos de ataque que deje pasar el traje que tengan en ese momento.!!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/17/2013 23:04'!cantAliadosDebiles	^aliados count: [ :unAliado | self esDebil:unAliado  ].! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 23:20'!esDebil:unGuerrero"El concepto de poder depende de cada guerrero:"" Para un terricola todos los Saiyajines podrian ser podersos pero para un Saiyajin, no necesariamente el resto de los Saiyajines lo es""la responsabilidad de decidir quien es poderoso o no depende del guerrero"	^((self esPoderoso: unGuerrero) not) .! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 23:10'!esPoderoso:unGuerrero"El concepto de poder depende de cada guerrero:"" Para un terricola todos los Saiyajines podrian ser podersos pero para un Saiyajin, no necesariamente el resto de los Saiyajines lo es""la responsabilidad de decidir quien es poderoso o no depende del guerrero"	^self nivelDePelea >=15000. ! !!Terricola methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 18:06'!initializesuper initialize.puntosDeEnergiaExtra:=200.bando:=Bueno bueno.! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 22:50'!meVaElBandoDe:unGuerrero^self bando esCompatibleCon: (unGuerrero bando).! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 23:15'!meVaParaAlidadoSegunSuPoder:unGuerrero	^((self esPoderoso:unGuerrero) | ((self esDebil: unGuerrero) & (self tengoPocosAliadosDebiles ))).	! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/28/2013 00:04'!resistenciaSegunGuerrero:ptosDeAtaque^ptosDeAtaque *0.05.! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 02:27'!teVaUnaAlianzaCon:unGuerrero	^ ((self condicionBasicaParaAlianza:unGuerrero) &	   ( self meVaParaAlidadoSegunSuPoder:unGuerrero) & 	   (self meVaElBandoDe: unGuerrero)).	  ! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/17/2013 23:04'!tengoMuchosAliadosDebiles	^self cantAliadosDebiles <=5.! !!Terricola methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/19/2013 23:14'!tengoPocosAliadosDebiles	^self cantAliadosDebiles <=5.! !Traje subclass: #TrajeEspecial	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!TrajeEspecial commentStamp: '<historical>' prior: 0!A TrajeEspecial is xxxxxxxxx.Instance Variables!!TrajeEspecial methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/3/2013 21:30'!resistencia:ptosDeAtaque"Se banca 20+El 10% "^(20+(super resistencia: ptosDeAtaque)).! !Object subclass: #PoderColectivo	instanceVariableNames: 'aliadosRequeridos energiaRequeridaDeAliados energiaRequeridaAtacante'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!PoderColectivo commentStamp: '<historical>' prior: 0!Colectivos: Le "piden" energía a aliados del guerrero que esté haciendo el ataque.Le sacan una cierta cantidad de puntos de energía a cada aliado especificadopara cada poder colectivo y otros 200 puntos de energía al atacante mismo, y lospuntos de ataque que producen son iguales a la cantidad total de energíarecaudada. Para que un guerrero pueda realizar este poder, tiene que tener almenos esos 200 puntos de energía y también una cantidad mínima de aliadosvivos (especificada para cada poder colectivo) que puedan darle la cantidad depuntos de energía que le sacaría a cada uno.!!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 11:30'!aliadosQueCumplenCondicionEnergia:unGuerrero^(unGuerrero aliadosVivos) select:[:unAliado | self cumpleCondicionEnergiaUnAliado: unAliado ].! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 08:54'!consumirEnergiaAliados: unosAliados^unosAliados aliados sum:[:unAliado | self consumirEnergiaDeUnAliado:  unAliado].! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:45'!consumirEnergiaAtacante: unAtacante^(unAtacante usarEnergia: (self energiaRequeridaAtacante)).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 08:58'!consumirEnergiaDeUnAliado:unAliado^unAliado usarEnergia: (self energiaRequeridaDeUnAliado).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/6/2013 20:31'!consumirEnergiaRequerida:unGuerrero^(self consumirEnergiaAtacante: unGuerrero)+ (self consumirEnergiaAliados: unGuerrero aliadosVivos).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 12:11'!cumpleCondicionAliados:unGuerrero^ ((self aliadosQueCumplenCondicionEnergia: unGuerrero) size) >= (self aliadosRequeridos).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:47'!cumpleCondicionEnergiaRequerida:elAtacante^((elAtacante puntosDeEnergia) >= self energiaRequeridaAtacante ) &  (self cumpleCondicionAliados:elAtacante  ).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 08:31'!cumpleCondicionEnergiaUnAliado:unAliado^(unAliado puntosDeEnergia) >= (self energiaRequeridaDeUnAliado).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 14:21'!cumpleCondiciones:unGuerrero^(self cumpleCondicionAliados: unGuerrero) & (self cumpleCondicionEnergiaRequerida: unGuerrero).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 12:07'!energiaConsumibleAliados:unGuerrero(self cumpleCondicionAliados: unGuerrero) ifTrue: [ ^(unGuerrero aliadosVivos)  inject: 0 into: [ :acum :unAliado |  acum + (self energiaConsumibleDeUnAliado:unAliado) ].]ifFalse:[^0]."^listaAliados sum:[:unAliado | self energiaConsumibleDeUnAliado:unAliado]"! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 22:05'!energiaConsumibleAtacante:unGuerrero(self cumpleCondicionEnergiaRequerida: unGuerrero)ifTrue: [ ^self energiaRequeridaAtacante.  ]ifFalse: [ ^0. ].! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 08:37'!energiaConsumibleDeUnAliado:unAliado(self cumpleCondicionEnergiaUnAliado:unAliado)ifTrue:[ ^self energiaRequeridaDeUnAliado]ifFalse:[^0].! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 12:06'!energiaConsumibleTotal:unGuerrero^(self energiaConsumibleAtacante:  unGuerrero) + (self energiaConsumibleAliados: unGuerrero).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:42'!energiaRequerida:unGuerrero^(self energiaRequeridaAtacante) + (self energiaRequeridaDeAliados).! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:49'!energiaRequeridaAtacante^energiaRequeridaAtacante.! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 21:49'!energiaRequeridaAtacante:unaCantenergiaRequeridaAtacante:=unaCant.! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 21:49'!initialize self energiaRequeridaAtacante:200.! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 20:24'!intenciadadDeAtaqueSegun:unGuerrero^self energiaConsumibleTotal:unGuerrero.! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/29/2013 23:36'!verificarAliadosVivosDe:elAtacante(self cumpleCondicionAliados:elAtacante)ifTrue: [ self error:'El atacante no tiene suficientes alidos vivos con energia' ].! !!PoderColectivo methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/16/2013 18:53'!verificarEnergiaRequeridaDe:elAtacante(self cumpleCondicionEnergiaRequerida:elAtacante)ifFalse: [ self error:'El atacante no tiene Energia' ]! !!PoderColectivo methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/30/2013 22:29'!aliadosRequeridos^aliadosRequeridos.! !!PoderColectivo methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/22/2013 01:02'!aliadosRequeridos:cant^aliadosRequeridos:=cant.! !!PoderColectivo methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/30/2013 00:00'!energiaRequeridaDeAliados^((self energiaRequeridaDeUnAliado) * aliadosRequeridos).! !!PoderColectivo methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/30/2013 00:48'!energiaRequeridaDeUnAliado"Getter energia requerida de UN aliado."^energiaRequeridaDeAliados.! !!PoderColectivo methodsFor: 'accessing' stamp: 'PabloMOntiveros 10/29/2013 23:52'!energiaRequeridaDeUnAliado:unaCant^energiaRequeridaDeAliados:=unaCant.! !!PoderColectivo methodsFor: 'Poderes y Nivles de Ataque' stamp: 'PabloOntiveros 12/8/2013 21:35'!usaPoder:unGuerrero contra:otroGuerreroself verificarAliadosVivosDe:unGuerrero.self verificarEnergiaRequeridaDe:unGuerrero.otroGuerrero recibirAtaque: (self consumirEnergiaRequerida:unGuerrero). ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PoderColectivo class	instanceVariableNames: ''!!PoderColectivo class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/29/2013 23:52'!aliadosRequeridos:cantAliados energiaRequeridaDeAliados:cantEnergiaXaliado| poderColectivo |poderColectivo := self new.poderColectivo aliadosRequeridos:cantAliados.poderColectivo energiaRequeridaDeUnAliado:cantEnergiaXaliado.^poderColectivo.! !!PoderColectivo class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/17/2013 01:06'!aliadosRequeridos:cantAliados energiaRequeridaDeAliados:cantEnergiaXaliado energiaRequeridaAtacante:energia| poderColectivo |poderColectivo := self new.poderColectivo aliadosRequeridos:cantAliados.poderColectivo energiaRequeridaDeUnAliado:cantEnergiaXaliado.poderColectivo energiaRequeridaAtacante:energia.^poderColectivo.! !Guerrero subclass: #Saiyajin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Saiyajin commentStamp: '<historical>' prior: 0!Saiyajin: Cuando comen una Semilla de Ermitaño ganan como puntos de energía extra 100 * cantidad de aliados que tengan.Depende de cada saiyajin si es malo o bueno, y puede aliarse con cualquiera de los dos bandos. La única condición es que la sumatoria de niveles de pelea entre el aliado candidato y sus aliados sea menor que el propio nivel de pelea (les gustan los desafíos).Por ejemplo, Vegeta sólo se aliaría con Krilin si el nivel de pelea de Krillin y sus aliados fuera menor que el de Vegeta.!!Saiyajin methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 00:52'!cantExtra^puntosDeEnergiaExtra*(self aliados size).! !!Saiyajin methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 02:21'!initializesuper initialize.puntosDeEnergiaExtra:=100.! !!Saiyajin methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 02:31'!meVaElNivelDePeleaDe:unGuerrero^ (self nivelDePelea > (unGuerrero nivelDePelea + (unGuerrero poderTotalAliados )) ).! !!Saiyajin methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/4/2013 07:08'!resistenciaSegunGuerrero:ptosDeAtaque^((ptosDeAtaque*0.1)+(self puntosDeEnergia *0.02)) min:ptosDeAtaque.! !!Saiyajin methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 10/20/2013 02:49'!teVaUnaAlianzaCon:unGuerrero^((self meVaElNivelDePeleaDe:unGuerrero) &   (self condicionBasicaParaAlianza:unGuerrero)).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Saiyajin class	instanceVariableNames: ''!!Saiyajin class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 01:18'!nivelDePelea:unNivel bando:unBando|unGuerrero|unGuerrero:=self nivelDePelea: unNivel.unGuerrero bando:unBando.^unGuerrero.! !!Saiyajin class methodsFor: 'as yet unclassified' stamp: 'PabloMOntiveros 10/22/2013 01:22'!nivelDePelea:unNivel bando: unBando traje:unTraje^((self nivelDePelea:unNivel bando: unBando ) traje:unTraje).! !!Saiyajin class methodsFor: 'as yet unclassified' stamp: 'EntrenandoATuDragona 12/16/2013 16:38'!nivelDePelea:unNivel energia:unaEnergia puntosDeVida:puntosVida bando:unBando|unGuerrero|unGuerrero:=self nivelDePelea: unNivel energia:unaEnergia puntosDeVida:puntosVida.unGuerrero bando:unBando.^unGuerrero.! !Object subclass: #Poder	instanceVariableNames: 'energiaRequeridaAtacante'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Objetos - DBZ'!!Poder commentStamp: '<historical>' prior: 0!A Poder is xxxxxxxxx.Instance Variables	energiaRequeridaAtacante:		<Object>energiaRequeridaAtacante	- xxxxx!!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:41'!consumirEnergiaAtacante: unAtacante^(unAtacante usarEnergia: (self energiaRequeridaAtacante)).! !!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:53'!cumpleCondicionEnergiaRequerida:elAtacante^((elAtacante puntosDeEnergia) >= self energiaRequeridaAtacante ).! !!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 09:05'!energiaRequerida:unGuerrero^(self energiaRequeridaAtacante).! !!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:41'!energiaRequeridaAtacante^energiaRequeridaAtacante.! !!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/8/2013 21:50'!energiaRequeridaAtacante:unaCant^energiaRequeridaAtacante:=unaCant.! !!Poder methodsFor: 'as yet unclassified' stamp: 'PabloOntiveros 12/11/2013 13:23'!verificarEnergiaRequeridaDe:elAtacante(self cumpleCondicionEnergiaRequerida:elAtacante)ifFalse: [ self error:'El atacante no tiene Energia' ]! !Malo initialize!Bueno initialize!SinTraje initialize!Guerrero initialize!Esfera initialize!